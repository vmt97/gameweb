{"version":3,"sources":["../../../../assets/scripts/assets/scripts/GameController.js"],"names":["UIController","require","GameController","cc","Class","extends","Component","properties","listImage","default","type","SpriteFrame","square","Prefab","listSquare","tmpSquare","score","canPlay","statics","instance","onLoad","initLevel","index","hidePlayButton","typeCreate","action1","delayTime","action2","callFunc","createSquare","action3","node","runAction","sequence","repeat","length","setUpPositionSquares","maxRow","maxCol","row","col","x","y","moveAction","moveTo","easing","easeBackInOut","spriteFrame","instantiate","parent","emit","setPosition","push","radomInteger","min","max","Math","ceil","floor","random","randomElementInArray","arr","getTmpSquare","setTmpSquare","clearTmpSquare","removeSquare","indexOf","splice","setCanPlay","checkWinGame","showVictory","countScore","setScore","showScore","playAgain","hideUIplayAgain","isCanPlay"],"mappings":"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","file":"GameController.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["\nvar UIController = require(\"UIController\");\n\nvar GameController = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        listImage: {\n            default: [],\n            type: cc.SpriteFrame\n        },\n\n        square: {\n            default: null,\n            type: cc.Prefab\n        },\n\n        listSquare: {\n            default: [],\n            type: cc.Prefab\n        },\n\n        tmpSquare: {\n            default: null,\n            type: cc.Prefab\n        },\n\n        score: 0,\n        canPlay: true\n\n\n    },\n\n    statics: {\n        instance: null\n    },\n\n    onLoad() {\n        GameController.instance = this;\n        this.score = 0;\n    },\n\n\n    initLevel: function () {\n        let index = 0;\n        if (UIController)\n            UIController.instance.hidePlayButton();\n\n        let typeCreate = 0;\n        let action1 = cc.delayTime(0.1);\n        let action2 = cc.callFunc(() => {\n            index++;\n            this.createSquare(index, typeCreate, this.listImage[typeCreate]);\n        }, this);\n        let action3 = cc.callFunc(() => {\n            index++;\n            this.createSquare(index, typeCreate, this.listImage[typeCreate]);\n            typeCreate++;\n        }, this);\n\n        this.node.runAction(cc.sequence(\n            cc.repeat(cc.sequence(action1, action2, action3), this.listImage.length),\n            cc.delayTime(1),\n            cc.callFunc(() => {\n                this.setUpPositionSquares();\n            })\n        )\n        );\n    },\n\n    setUpPositionSquares() {\n        let maxRow = 4;\n        let maxCol = 5;\n        let index = 0;\n        // this.listSquare = this.listSquare.sort(() => Math.random() - 0.5);\n        for (let row = 0; row < maxRow; row++) {\n            for (let col = 0; col < maxCol; col++) {\n\n                let x = - 130 + (col * 64);\n                let y = 150 + (-row * 64);\n\n                let square = this.listSquare[index];\n                let moveAction = cc.moveTo(1, x, y).easing(cc.easeBackInOut());\n                let sequence = cc.sequence(\n                    cc.delayTime(0.1 * index),\n                    moveAction,\n                );\n                square.runAction(sequence);\n                index++;\n            }\n        }\n    },\n\n    createSquare(index, type, spriteFrame) {\n        let square = cc.instantiate(this.square);\n        square.parent = this.node;\n        // index++;\n        square.emit(\"INIT_INFO\", index, type, spriteFrame);\n        square.setPosition(0, -130, 0);\n        this.listSquare.push(square);\n    },\n\n    radomInteger: function (min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min) + min);\n    },\n\n    //4\n    randomElementInArray: function (arr) {\n        let index = radomInteger(0, arr.length - 1);\n        return arr[index];\n    },\n\n\n    getTmpSquare() {\n        return this.tmpSquare;\n    },\n\n    setTmpSquare(square) {\n        this.tmpSquare = square;\n    },\n\n    clearTmpSquare() {\n        this.tmpSquare = null;\n    },\n\n    removeSquare(square) {\n        let index = this.listSquare.indexOf(square);\n        this.listSquare.splice(index, 1);\n        this.setCanPlay(true);\n    },\n\n    checkWinGame() {\n        if (this.listSquare.length > 0)\n            return;\n        if (UIController)\n            UIController.instance.showVictory();\n    },\n\n    countScore() {\n        let action1 = cc.delayTime(0.1);\n        let action2 = cc.callFunc(() => {\n            this.score += 1;\n            this.setScore();\n        }, this);\n        this.node.runAction(cc.repeat(cc.sequence(action1, action2), 10));\n    },\n\n    setScore() {\n        if (UIController)\n            UIController.instance.showScore(this.score);\n    },\n\n    playAgain() {\n        if (UIController)\n            UIController.instance.hideUIplayAgain();\n        this.initLevel();\n    },\n\n    setCanPlay(canPlay) {\n        this.canPlay = canPlay;\n    },\n\n    isCanPlay() {\n        return this.canPlay;\n    }\n\n});\n"]}