{"version":3,"sources":["../../../../assets/scripts/assets/scripts/GameController.js"],"names":["GameController","cc","Class","extends","Component","properties","listImage","default","type","SpriteFrame","square","Prefab","listSquare","tmpSquare","UIController","require","score","canPlay","statics","instance","onLoad","initLevel","index","typeCreate","action1","delayTime","action2","callFunc","createSquare","action3","node","runAction","sequence","repeat","length","setUpPositionSquares","maxRow","maxCol","row","col","x","y","moveAction","moveTo","easing","easeBackInOut","spriteFrame","instantiate","parent","emit","setPosition","push","radomInteger","min","max","Math","ceil","floor","random","randomElementInArray","arr","getTmpSquare","setTmpSquare","clearTmpSquare","removeSquare","indexOf","splice","setCanPlay","checkWinGame","showVictory","countScore","setScore","showScore","playAgain","hideUIplayAgain","isCanPlay"],"mappings":"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","file":"GameController.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["var GameController = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        listImage: {\n            default: [],\n            type: cc.SpriteFrame\n        },\n\n        square: {\n            default: null,\n            type: cc.Prefab\n        },\n\n        listSquare: {\n            default: [],\n            type: cc.Prefab\n        },\n\n        tmpSquare: {\n            default: null,\n            type: cc.Prefab\n        },\n        UIController: require(\"UIConTroller\"),\n        score: 0,\n        canPlay: true\n\n\n    },\n\n    statics: {\n        instance: null\n    },\n\n    onLoad() {\n        GameController.instance = this;\n        this.score = 0;\n    },\n\n\n    initLevel: function () {\n        let index = 0;\n        let typeCreate = 0;\n        let action1 = cc.delayTime(0.1);\n        let action2 = cc.callFunc(() => {\n            index++;\n            this.createSquare(index, typeCreate, this.listImage[typeCreate]);\n        }, this);\n        let action3 = cc.callFunc(() => {\n            index++;\n            this.createSquare(index, typeCreate, this.listImage[typeCreate]);\n            typeCreate++;\n        }, this);\n\n        this.node.runAction(cc.sequence(\n            cc.repeat(cc.sequence(action1, action2, action3), this.listImage.length),\n            cc.delayTime(1),\n            cc.callFunc(() => {\n                this.setUpPositionSquares();\n            })\n        )\n        );\n    },\n\n    setUpPositionSquares() {\n        let maxRow = 4;\n        let maxCol = 5;\n        let index = 0;\n        // this.listSquare = this.listSquare.sort(() => Math.random() - 0.5);\n        for (let row = 0; row < maxRow; row++) {\n            for (let col = 0; col < maxCol; col++) {\n\n                let x = - 130 + (col * 64);\n                let y = 150 + (-row * 64);\n\n                let square = this.listSquare[index];\n                let moveAction = cc.moveTo(1, x, y).easing(cc.easeBackInOut());\n                let sequence = cc.sequence(\n                    cc.delayTime(0.1 * index),\n                    moveAction,\n                );\n                square.runAction(sequence);\n                index++;\n            }\n        }\n    },\n\n    createSquare(index, type, spriteFrame) {\n        let square = cc.instantiate(this.square);\n        square.parent = this.node;\n        // index++;\n        square.emit(\"INIT_INFO\", index, type, spriteFrame);\n        square.setPosition(0, -130, 0);\n        this.listSquare.push(square);\n    },\n\n    radomInteger: function (min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min) + min);\n    },\n\n    //4\n    randomElementInArray: function (arr) {\n        let index = radomInteger(0, arr.length - 1);\n        return arr[index];\n    },\n\n\n    getTmpSquare() {\n        return this.tmpSquare;\n    },\n\n    setTmpSquare(square) {\n        this.tmpSquare = square;\n    },\n\n    clearTmpSquare() {\n        this.tmpSquare = null;\n    },\n\n    removeSquare(square) {\n        let index = this.listSquare.indexOf(square);\n        this.listSquare.splice(index, 1);\n        this.setCanPlay(true);\n    },\n\n    checkWinGame() {\n        if (this.listSquare.length > 0)\n            return;\n            this.UIController.showVictory();\n    },\n\n    countScore() {\n        let action1 = cc.delayTime(0.1);\n        let action2 = cc.callFunc(() => {\n            this.score += 1;\n            this.setScore();\n        }, this);\n        this.node.runAction(cc.repeat(cc.sequence(action1, action2), 10));\n    },\n\n    setScore() {\n        this.UIController.showScore(this.score);\n    },\n\n    playAgain() {\n        this.UIController.hideUIplayAgain();\n        this.initLevel();\n    },\n\n    setCanPlay(canPlay) {\n        this.canPlay = canPlay;\n    },\n\n    isCanPlay() {\n        return this.canPlay;\n    }\n\n});\n"]}